{"ast":null,"code":"var _jsxFileName = \"/Users/Kh/8_react/workspace/ums_frontend/src/components/Dropdown.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dropdown = ({\n  list,\n  name,\n  width,\n  onChange,\n  value\n}) => {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const selectedItem = useRef(\"\");\n  const dropdownRef = useRef(null);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const clickElement = e => {\n    const value = e.target.innerHTML;\n    selectedItem.current = value;\n    document.getElementById(name).value = value;\n    if (value == \"전체\") {\n      document.getElementById(name).value = 'all';\n    }\n    setIsOpen(false);\n    if (onChange) {\n      onChange(document.getElementById(name).value);\n    }\n  };\n  useEffect(() => {\n    const handleClickOutside = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsOpen(false);\n      }\n    };\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: dropdownRef,\n    className: `common-dropdown ${isOpen ? 'show' : ''}`,\n    style: {\n      width: `${width}px`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"hidden\",\n      value: selectedItem.current,\n      name: name,\n      id: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"button\",\n      className: \"dropdown-button\",\n      value: selectedItem.current == \"\" ? value ? value : \"카테고리\" : selectedItem.current,\n      style: {\n        width: `${width}px`\n      },\n      onClick: toggleDropdown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dropdown-content ${isOpen ? 'show' : ''}`,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          width: `${width}px`\n        },\n        children: list.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: clickElement,\n            style: {\n              width: `${width}px`\n            },\n            children: item\n          }, item, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Dropdown, \"GEx1SXcUi0uE2H4WUob9V9r+Jj4=\");\n_c = Dropdown;\nexport default Dropdown;\nvar _c;\n$RefreshReg$(_c, \"Dropdown\");","map":{"version":3,"names":["useEffect","useRef","useState","jsxDEV","_jsxDEV","Dropdown","list","name","width","onChange","value","_s","isOpen","setIsOpen","selectedItem","dropdownRef","toggleDropdown","clickElement","e","target","innerHTML","current","document","getElementById","handleClickOutside","contains","addEventListener","removeEventListener","ref","className","style","children","type","id","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","item","_c","$RefreshReg$"],"sources":["/Users/Kh/8_react/workspace/ums_frontend/src/components/Dropdown.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\n\r\nconst Dropdown = ({list, name, width, onChange, value}) => {\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const selectedItem = useRef(\"\");\r\n    const dropdownRef = useRef(null);\r\n\r\n    const toggleDropdown = () => {\r\n        setIsOpen(!isOpen);\r\n    }\r\n    const clickElement = (e) => {\r\n        const value = e.target.innerHTML;\r\n        selectedItem.current = value;\r\n        document.getElementById(name).value = value;\r\n        if(value == \"전체\"){\r\n            document.getElementById(name).value = 'all';\r\n        }\r\n        setIsOpen(false);\r\n        if(onChange){\r\n            onChange(document.getElementById(name).value);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const handleClickOutside = (e) => {\r\n            if(dropdownRef.current && !dropdownRef.current.contains(e.target)){\r\n                setIsOpen(false);\r\n            }\r\n        }\r\n        document.addEventListener('click',handleClickOutside);\r\n\r\n        return () => {\r\n            document.removeEventListener('click',handleClickOutside);\r\n        }\r\n    },[])\r\n\r\n    return (\r\n        <div ref={dropdownRef} className={`common-dropdown ${isOpen?'show':''}`} style={{width:`${width}px`}}>\r\n            <input type=\"hidden\" value={selectedItem.current} name={name} id={name}></input>\r\n            <input type=\"button\" className=\"dropdown-button\" value={selectedItem.current == \"\" ? (value?value:\"카테고리\") : selectedItem.current} style={{width:`${width}px`}} onClick={toggleDropdown}></input>\r\n            <div className={`dropdown-content ${isOpen?'show':''}`}>\r\n                <ul style={{width:`${width}px`}}>\r\n                    {\r\n                        list.map((item) => {\r\n                            return <li key={item} onClick={clickElement} style={{width:`${width}px`}}>{item}</li>\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Dropdown;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}